{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1477149189897},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1477149189897},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1477149189897},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1477149189897},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1477149189897},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1477149189897},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1477149189897},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1477149189897},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1477149189897},{"_id":"themes/next/_config.yml","hash":"58abc1cf2e878ad9832f001a13b4bf9ead2e19e8","modified":1477149189897},{"_id":"themes/next/gulpfile.coffee","hash":"d267332ec1461042fb16a9cb0737e1555fb4b79e","modified":1477149189897},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1477149189897},{"_id":"source/tags/index.md","hash":"dd466429fb7344b5f52aa935261b3e52c5f64bdd","modified":1477149547301},{"_id":"source/_posts/static修饰符.md","hash":"68b6f8442fc3e4acbad14cd59bf5c39a07700890","modified":1479086746577},{"_id":"source/_posts/ubuntu16-04搭建github-hexo博客.md","hash":"d24dc262ea78cfbb1812e652602d8bb67f2f6199","modified":1479097450020},{"_id":"source/_posts/动态数组.md","hash":"cbfba65a6ca547e2c5a4e935c62aaafae4c48f91","modified":1479087117685},{"_id":"source/_posts/在多台电脑管理一个github-hexo博客.md","hash":"91127e9c9e2d61ce19ca0074dd4f26520ee44b09","modified":1479096174272},{"_id":"source/_posts/基于windows10搭建github-hexo博客.md","hash":"fd27bb6d27fa337d38887bf272ceb40f6f32f25e","modified":1477190598214},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1477149189921},{"_id":"themes/next/.git/config","hash":"91b6a53b2a7f929b698734717a38d4ac169f0c1f","modified":1477149189921},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1477149189921},{"_id":"themes/next/.git/index","hash":"28b69fae8d20fbb7dbe4af92a144440268fc6500","modified":1477187522298},{"_id":"themes/next/.git/packed-refs","hash":"e31117651c0ba696618bdd42320eb8b5ada32440","modified":1477149189921},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1477149189889},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1477149189889},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1477149189889},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1477149189889},{"_id":"themes/next/languages/en.yml","hash":"63de36e9f5822084b61b03a507f6246f8f962b3f","modified":1477149189889},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1477149189889},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1477149189889},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1477149189889},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1477149189889},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1477149189889},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1477149189889},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1477149189889},{"_id":"themes/next/languages/zh-Hans.yml","hash":"ed36a28104f3c185fc4a0b3e52071d0efabe168c","modified":1477149189889},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1477149189889},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1477149189893},{"_id":"themes/next/layout/_layout.swig","hash":"627aa021dd052d3700e84f8c2eeabd4e30989158","modified":1477149189893},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1477149189893},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1477149189893},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1477149189897},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1477149189897},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1477149189897},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1477149189897},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1477149189897},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1477149189897},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1477149189909},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1477149189909},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1477149189909},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477149189909},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1477149189909},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1477149189909},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1477149189909},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1477149189909},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1477149189909},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1477149189909},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1477149189909},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1477149189909},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1477149189909},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1477149189909},{"_id":"themes/next/.git/logs/HEAD","hash":"1994c0b36854afc072ac32b438927b8bcd9beeac","modified":1477149189909},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"bc311e9f4333188da5c9c721ae467ba14410d5b2","modified":1477149189893},{"_id":"themes/next/layout/_macro/post.swig","hash":"ea40d388ae190e2228cbe54f054be621e3fa061c","modified":1477149189893},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1477149189893},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"084867c289c95c5ebc18435a3b2092091bb8e2ba","modified":1477149189893},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1477149189893},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1477149189893},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1477149189893},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1477149189893},{"_id":"themes/next/layout/_partials/head.swig","hash":"06b6604176367af52587312e2575b52ecf53c3d9","modified":1477149189893},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1477149189893},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1477149189893},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1477149189893},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1477149189893},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1477149189893},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1477149189893},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1477149189893},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1477149189897},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1477149189897},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1477149189897},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1477149189905},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1477149189897},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1477149189897},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1477149189897},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1477149189897},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1477149189897},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1477149189897},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1477149189897},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1477149189897},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1477149189897},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1477149189897},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1477149189897},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1477149189897},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1477149189897},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477149189893},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477149189893},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477149189905},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477149189905},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477149189905},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477149189909},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477149189909},{"_id":"themes/next/.git/refs/heads/master","hash":"d36f6d651a14df9393aefd229995a965ad126eca","modified":1477149189909},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1477149189893},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1477149189893},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1477149189893},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1477149189893},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1477149189893},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1477149189893},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1477149189893},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1477149189893},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1477149189893},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"60a51a33416e2b86ac9fbefc86b80f2f5f60e1c0","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1477149189893},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1477149189905},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1477149189905},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1477149189905},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1477149189909},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1477149189909},{"_id":"themes/next/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1477149189909},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1477149189901},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1477149189901},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1477149189901},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1477149189901},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1477149189901},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1477149189901},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1477149189901},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1477149189901},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1477149189901},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1477149189901},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1477149189901},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1477149189905},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1477149189905},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1477149189905},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1477149189905},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1477149189905},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1477149189905},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1477149189905},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1477149189905},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1477149189905},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1477149189905},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1477149189905},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1477149189905},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1477149189905},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"1994c0b36854afc072ac32b438927b8bcd9beeac","modified":1477149189909},{"_id":"themes/next/.git/objects/pack/pack-95f313399d6db4b3247867ac4f8fdf8257b59286.idx","hash":"2b9b51790794b1edca450f9344ab6ba37ba651af","modified":1477149189921},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1477149189909},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3065c1bcb54da1e0018136595741341ac71ef9e7","modified":1477149189893},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1477149189893},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1477149189905},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1477149189905},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1477149189905},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1477149189905},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1477149189905},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1477149189905},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1477149189905},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1477149189905},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1477149189905},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1477149189905},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1477149189909},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1477149189901},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1477149189901},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1477149189905},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1477149189905},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1477149189905},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1477149189901},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1477149189905},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"1994c0b36854afc072ac32b438927b8bcd9beeac","modified":1477149189909},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"d23db2f598b8eb274680023745ba6d6d466cd84a","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1477149189905},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1477149189905},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1477149189909},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1477149189909},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1477149189901},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1477149189901},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1477149189901},{"_id":"themes/next/source/images/avatar.jpg","hash":"60c242957bed3e9e13b99d0f66c264dedc2d8974","modified":1477149189901},{"_id":"themes/next/.git/objects/pack/pack-95f313399d6db4b3247867ac4f8fdf8257b59286.pack","hash":"8d71211cccaeab41c08e7be97d5f67f3be174077","modified":1477149189921}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2016-10-19T07:08:11.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-10-19 15:08:11\ntype: \"tags\"\n---\n","updated":"2016-10-22T15:19:07.301Z","path":"tags/index.html","comments":1,"layout":"page","_id":"civhkfs9v0000z3jfxfpl1sja","content":"","excerpt":"","more":""}],"Post":[{"title":"static修饰符","date":"2016-11-14T00:05:00.000Z","_content":"static修饰符修饰的内容，涉及到了其在内存中的存储方式。所以先了解一下内存中的结构吧。在内存中变量的存储分为3个区，分别为栈区，堆区，和全局变量区。\n\n- 栈区：存储自动变量。自动变量所指的自动，是指系统会为变量自动分配和回收内存，而这段内存空间就在栈区中。通常，在函数里没有修饰的局部变量都是自动变量。\n\n- 堆区：主要用于动态内存的分配。比如c/c++中的malloc，c++中的new，进行动态分配后的内存，系统不会自动回收，需要我们自己手动释放。如上面用malloc和new分配的内存，分别用free和delete释放。\n\n- 全局变量区：顾名思义，全局变量区就是用来存放全局变量的。不仅如此，全局变量区还用来存放static修饰的静态变量。既然static修饰的静态变量跟全局变量是放在同一个内存区的，那么他们的作用肯定是相似的。\n\n下面分四个部分来讲述static:\n\n- 静态全局变量：静态全局变量在定义它的整个源文件可见，但在其他文件不可用。相对于在整个工程中可见的非静态全局变量，静态变量给全局变量加上了一个限制。那么，使用静态全局变量对比于非静态变量，它的优点是避免了不同源文件间变量的冲突。\n\n- 静态局部变量：静态局部变量在作用域结束时不会马上被释放，等到下次调用时，其初始值为上一次运算赋予的值。例如，当我们在一个函数里声明一个变量，想在下次调用函数时，变量的值是上一次运算后的变量，这时候就可以使用静态局部变量，但这时静态局部变量在函数的外部仍然不可见的。举个例子：\n\n\n    #include <stdio.h>\n    int fun(int n)\n    {\n    \t static int f = 1;\n    \t f = f * n;\n    \t return f;\n     }\n\n    void main()\n    {\n    \tint i,f = 0;\n    \tfor(i = 1; i <= 5; i++)\n    \tprintf(\"fun(%d) = %d\\n\", i, fun(i));\n    \tprintf(\"f = %d\\n\", f);\n    }\n\n程序运行的结果如下：\n\n    fun(1) = 1\n    fun(2) = 2\n    fun(3) = 6\n    fun(4) = 24\n    fun(5) = 120\n    f = 0\n\n- 静态函数：静态函数就是用static修饰的函数，他跟静态全局变量是类似的。即它只能被定义它的文件可见，其他文件不可见。\n\n- 静态成员变量：在c++中的类里，如果变量成员使用static修饰的话，那么这个变量对所有对象来说，是只有一份的。即在任何对象修改这个变量，都会影响这个变量在其他对象里的值。对于用static修饰的方法，称为静态方法，静态方法不能访问非静态成员。这是因为在调用静态方法时，并没有将对象的引用传递给它。\n","source":"_posts/static修饰符.md","raw":"---\ntitle: static修饰符\ndate: 2016-11-14 08:05:00\ntags: 学习笔记\n---\nstatic修饰符修饰的内容，涉及到了其在内存中的存储方式。所以先了解一下内存中的结构吧。在内存中变量的存储分为3个区，分别为栈区，堆区，和全局变量区。\n\n- 栈区：存储自动变量。自动变量所指的自动，是指系统会为变量自动分配和回收内存，而这段内存空间就在栈区中。通常，在函数里没有修饰的局部变量都是自动变量。\n\n- 堆区：主要用于动态内存的分配。比如c/c++中的malloc，c++中的new，进行动态分配后的内存，系统不会自动回收，需要我们自己手动释放。如上面用malloc和new分配的内存，分别用free和delete释放。\n\n- 全局变量区：顾名思义，全局变量区就是用来存放全局变量的。不仅如此，全局变量区还用来存放static修饰的静态变量。既然static修饰的静态变量跟全局变量是放在同一个内存区的，那么他们的作用肯定是相似的。\n\n下面分四个部分来讲述static:\n\n- 静态全局变量：静态全局变量在定义它的整个源文件可见，但在其他文件不可用。相对于在整个工程中可见的非静态全局变量，静态变量给全局变量加上了一个限制。那么，使用静态全局变量对比于非静态变量，它的优点是避免了不同源文件间变量的冲突。\n\n- 静态局部变量：静态局部变量在作用域结束时不会马上被释放，等到下次调用时，其初始值为上一次运算赋予的值。例如，当我们在一个函数里声明一个变量，想在下次调用函数时，变量的值是上一次运算后的变量，这时候就可以使用静态局部变量，但这时静态局部变量在函数的外部仍然不可见的。举个例子：\n\n\n    #include <stdio.h>\n    int fun(int n)\n    {\n    \t static int f = 1;\n    \t f = f * n;\n    \t return f;\n     }\n\n    void main()\n    {\n    \tint i,f = 0;\n    \tfor(i = 1; i <= 5; i++)\n    \tprintf(\"fun(%d) = %d\\n\", i, fun(i));\n    \tprintf(\"f = %d\\n\", f);\n    }\n\n程序运行的结果如下：\n\n    fun(1) = 1\n    fun(2) = 2\n    fun(3) = 6\n    fun(4) = 24\n    fun(5) = 120\n    f = 0\n\n- 静态函数：静态函数就是用static修饰的函数，他跟静态全局变量是类似的。即它只能被定义它的文件可见，其他文件不可见。\n\n- 静态成员变量：在c++中的类里，如果变量成员使用static修饰的话，那么这个变量对所有对象来说，是只有一份的。即在任何对象修改这个变量，都会影响这个变量在其他对象里的值。对于用static修饰的方法，称为静态方法，静态方法不能访问非静态成员。这是因为在调用静态方法时，并没有将对象的引用传递给它。\n","slug":"static修饰符","published":1,"updated":"2016-11-14T01:25:46.577Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhkfs9z0001z3jfyirpegct","content":"<p>static修饰符修饰的内容，涉及到了其在内存中的存储方式。所以先了解一下内存中的结构吧。在内存中变量的存储分为3个区，分别为栈区，堆区，和全局变量区。</p>\n<ul>\n<li><p>栈区：存储自动变量。自动变量所指的自动，是指系统会为变量自动分配和回收内存，而这段内存空间就在栈区中。通常，在函数里没有修饰的局部变量都是自动变量。</p>\n</li>\n<li><p>堆区：主要用于动态内存的分配。比如c/c++中的malloc，c++中的new，进行动态分配后的内存，系统不会自动回收，需要我们自己手动释放。如上面用malloc和new分配的内存，分别用free和delete释放。</p>\n</li>\n<li><p>全局变量区：顾名思义，全局变量区就是用来存放全局变量的。不仅如此，全局变量区还用来存放static修饰的静态变量。既然static修饰的静态变量跟全局变量是放在同一个内存区的，那么他们的作用肯定是相似的。</p>\n</li>\n</ul>\n<p>下面分四个部分来讲述static:</p>\n<ul>\n<li><p>静态全局变量：静态全局变量在定义它的整个源文件可见，但在其他文件不可用。相对于在整个工程中可见的非静态全局变量，静态变量给全局变量加上了一个限制。那么，使用静态全局变量对比于非静态变量，它的优点是避免了不同源文件间变量的冲突。</p>\n</li>\n<li><p>静态局部变量：静态局部变量在作用域结束时不会马上被释放，等到下次调用时，其初始值为上一次运算赋予的值。例如，当我们在一个函数里声明一个变量，想在下次调用函数时，变量的值是上一次运算后的变量，这时候就可以使用静态局部变量，但这时静态局部变量在函数的外部仍然不可见的。举个例子：</p>\n</li>\n</ul>\n<pre><code>#include &lt;stdio.h&gt;\nint fun(int n)\n{\n     static int f = 1;\n     f = f * n;\n     return f;\n }\n\nvoid main()\n{\n    int i,f = 0;\n    for(i = 1; i &lt;= 5; i++)\n    printf(&quot;fun(%d) = %d\\n&quot;, i, fun(i));\n    printf(&quot;f = %d\\n&quot;, f);\n}\n</code></pre><p>程序运行的结果如下：</p>\n<pre><code>fun(1) = 1\nfun(2) = 2\nfun(3) = 6\nfun(4) = 24\nfun(5) = 120\nf = 0\n</code></pre><ul>\n<li><p>静态函数：静态函数就是用static修饰的函数，他跟静态全局变量是类似的。即它只能被定义它的文件可见，其他文件不可见。</p>\n</li>\n<li><p>静态成员变量：在c++中的类里，如果变量成员使用static修饰的话，那么这个变量对所有对象来说，是只有一份的。即在任何对象修改这个变量，都会影响这个变量在其他对象里的值。对于用static修饰的方法，称为静态方法，静态方法不能访问非静态成员。这是因为在调用静态方法时，并没有将对象的引用传递给它。</p>\n</li>\n</ul>\n","excerpt":"","more":"<p>static修饰符修饰的内容，涉及到了其在内存中的存储方式。所以先了解一下内存中的结构吧。在内存中变量的存储分为3个区，分别为栈区，堆区，和全局变量区。</p>\n<ul>\n<li><p>栈区：存储自动变量。自动变量所指的自动，是指系统会为变量自动分配和回收内存，而这段内存空间就在栈区中。通常，在函数里没有修饰的局部变量都是自动变量。</p>\n</li>\n<li><p>堆区：主要用于动态内存的分配。比如c/c++中的malloc，c++中的new，进行动态分配后的内存，系统不会自动回收，需要我们自己手动释放。如上面用malloc和new分配的内存，分别用free和delete释放。</p>\n</li>\n<li><p>全局变量区：顾名思义，全局变量区就是用来存放全局变量的。不仅如此，全局变量区还用来存放static修饰的静态变量。既然static修饰的静态变量跟全局变量是放在同一个内存区的，那么他们的作用肯定是相似的。</p>\n</li>\n</ul>\n<p>下面分四个部分来讲述static:</p>\n<ul>\n<li><p>静态全局变量：静态全局变量在定义它的整个源文件可见，但在其他文件不可用。相对于在整个工程中可见的非静态全局变量，静态变量给全局变量加上了一个限制。那么，使用静态全局变量对比于非静态变量，它的优点是避免了不同源文件间变量的冲突。</p>\n</li>\n<li><p>静态局部变量：静态局部变量在作用域结束时不会马上被释放，等到下次调用时，其初始值为上一次运算赋予的值。例如，当我们在一个函数里声明一个变量，想在下次调用函数时，变量的值是上一次运算后的变量，这时候就可以使用静态局部变量，但这时静态局部变量在函数的外部仍然不可见的。举个例子：</p>\n</li>\n</ul>\n<pre><code>#include &lt;stdio.h&gt;\nint fun(int n)\n{\n     static int f = 1;\n     f = f * n;\n     return f;\n }\n\nvoid main()\n{\n    int i,f = 0;\n    for(i = 1; i &lt;= 5; i++)\n    printf(&quot;fun(%d) = %d\\n&quot;, i, fun(i));\n    printf(&quot;f = %d\\n&quot;, f);\n}\n</code></pre><p>程序运行的结果如下：</p>\n<pre><code>fun(1) = 1\nfun(2) = 2\nfun(3) = 6\nfun(4) = 24\nfun(5) = 120\nf = 0\n</code></pre><ul>\n<li><p>静态函数：静态函数就是用static修饰的函数，他跟静态全局变量是类似的。即它只能被定义它的文件可见，其他文件不可见。</p>\n</li>\n<li><p>静态成员变量：在c++中的类里，如果变量成员使用static修饰的话，那么这个变量对所有对象来说，是只有一份的。即在任何对象修改这个变量，都会影响这个变量在其他对象里的值。对于用static修饰的方法，称为静态方法，静态方法不能访问非静态成员。这是因为在调用静态方法时，并没有将对象的引用传递给它。</p>\n</li>\n</ul>\n"},{"title":"ubuntu16.04搭建github+hexo博客","date":"2016-10-18T13:03:33.000Z","_content":"材料\n===================\n- ubuntu16.04\n- Github,Git，hexo，node.js，ssh key等\n\n生成SSH keys\n===================\n打开终端,输入  \n    $ ssh-keygen -t rsa -C \"Your_email@example.com\"\n\n回车后会提示：\n\n    Generating public/private rsa key pair.  \n\n继续回车，提示：\n\n    Enter file in which to save the key (~/.ssh/id_rsa):  \n\n这里将SSH keys保存在默认文件夹，直接回车就行了。然后按提示输入你要设置的密码并再次输入确认：\n\n    Enter passphrase (empty 'for' no passphrase):\n    Enter same passphrase again:\n\n接下来就会提示成功：\n\n    Your identification has been saved in ~/.ssh/id_rsa.\n    Your public key has been saved in ~/.ssh/id_rsa.pub.\n    The key fingerprint is:\n    ... Your_email@example.com\n\n在 .ssh 目录下创建一个 config 文件:\n\n    $ cd ~/.ssh\n    $ gedit config\n\n在文件里面输入如下配置信息：\n\n    Host Yourname.github.com         #这里修改成你自己的 host\n    HostName github.com\n    PreferredAuthentications publickey   \n    IdentityFile ~/.ssh/id_rsa    # 这里填入你前面新建的密钥的路径\n    User git\n\n这里输入完成，保存，关闭。回到终端。接下来要查看新建的SSH key是否在运行\n\n    $ ssh-add ~/.ssh/id_rsa\n    $ ssh-add -l\n\n如果显示了刚刚创建的SSH key，则表明已经在运行了。我们需要把这个SSH key添加到github，但这里要使用的是id_rsa.public。用gedit打开id_rsa.public，然后复制里面的内容。打开你的github网页，右上角有个下拉菜单，点击，然后选择setting，在setting页面左边一栏选择SSH and GPG keys。接下来在SSH keys那里选择New SSH key。进入页面后，title随便填吧。key就填刚刚复制的一段内容。之后点击Add SSH key完成添加。\n\n回到终端，输入\n\n    $ ssh -T git@github.com\n    Hi Youname! You’ve successfully authenticated, but GitHub does not provide shell access.\n\n这就代表已经配对成功了。\n\n安装Node.js\n=====================\n\n在终端输入nodejs或者npm，如果没有安装会提示你进行安装，命令如下：\n\n    sudo apt-get update\n    sudo apt-get install nodejs\n    ln -s /usr/bin/nodejs /usr/bin/node\n    sudo apt-get install npm\n\n这里添加了一个用node指向nodejs的软链接，是因为用包管理器安装的话，二进制表文件被叫做 nodejs，但 hexo 用的是 node\n\n安装Hexo\n=====================\n在终端输入下面的命令安装\n\n    $ npm install -g hexo-cli\n\n安装完后进行初始化，进入你要保存博客的目录\n\n    $ hexo init hexo    #初始化，创建一个你专门存放博客文件的文件夹，我这里把文件夹命名为 hexo，你可以改成你想要的名字\n    $ cd hexo              #进入 hexo 目录\n    $ npm install          #安装相关依赖\n    $ npm install hexo-deployer-git --save\n\n测试博客是否能运行\n\n    $ hexo g\n    $ hexo s\n\n终端会显示\n\n    INFO  Start processing\n    INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n\n在浏览器输入 localhost:40000,如果成功的话便会有页面显示出来，否则会跳到404页面。\n\n将hexo部署到github\n=================================\n用gedit打开hexo目录下的_config.yml文件\n\n    $ gedit _config.yml\n\n修改deploy字段：\n    \n    deploy:\n      type: git\n      repository: https://github.com/JereryL/JereryL.github.io.git\n      branch: master\n\n注意：格式必须按照上面所示，否则会报错。保存退出，在终端输入：\n\n    $ hexo g\n    $ hexo d\n\n按照提示输入帐号密码，完成后在浏览器输入自己的github博客地址，看是否正常成功。至此，将hexo部署在github的过程已经完成。\n\n更换hexo主题\n========================\n因为我正在使用的是next主题，所以这里以next主题为例。首先找到next主题的仓库，然后克隆到本机hexo目录下的themes目录，代码如下\n\n    $ cd your-hexo-site\n    $ git clone https://github.com/iissnan/hexo-theme-next themes/next\n\n下载完成后，在themes/next下会生成一个_config.yml配置文件，这里称其为主题配置文件，而在hexo目录下的那个_config.yml文件则称为站点配置文件。\n\n启用主题\n-------------------\n修改站点配置文件：\n\n    theme: next\n\n验证主题，可以在终端输入:\n\n    hexo g\n    hexo s\n\n然后在localhost:4000上查看是否成功修改。\n\n选择主题风格\n------------------\n主题配置文件里面的Scheme字段提供了选择next主题下的3种风格，要切换的话将前面的#号去掉即可\n    \n    #scheme: Muse\n    scheme: Mist\n    #scheme: Pisces\n\n设置语言\n----------------\n修改站点配置语言，将language设置成zh-Hans即可切换为简体中文\n\n    language: zh-Hans\n\n设置菜单\n-----------------------\n    修改主题配置文件，修改如下内容，在启用的菜单项去掉#号，在删除的菜单项加上#号即可\n\n    menu:\n      home: /\n      archives: /archives\n      #about: /about\n      #categories: /categories\n      tags: /tags\n      #commonweal: /404.html\n\n设置头像\n------------------------------\n修改站点配置文件，新增字段 avatar，设置头像的链接地址。例如我的头像放在source/images目录下，则我修改为\n\n    avatar: source/images/avatar.jpg\n\n设置作者昵称\n------------------------------\n修改站点配置未见的author。\n\n设置站点描述\n------------------------\n\n修改站点配置文件，设置description字段即可。\n\n至此，整个站点基本搭建完毕，除此之外，还能加入多说评论系统，但我还没有进行尝试，所以先不做此修改了。最后一点值得注意的是，很多人为了美观，布局，都会删除hello world这篇文章。但不要急着删除，因为在没有其他文章的情况下删除这篇文章，在进行hexo clean后会报错。所以在你写好自己的第一篇文章后才删除这篇文章吧。\n\n参考自：  \n关于在 Ubuntu 上部署 Hexo 到 Github：  \nhttp://www.leyar.me/create-a-blog-with-hexo-in-ubuntu/\n\n史上最详细“截图”搭建Hexo博客并部署到Github  \nhttp://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html  \n\n开始使用NexT:  \nhttp://theme-next.iissnan.com/getting-started.html\n\nMarkdown 语法说明 (简体中文版):  \nhttp://www.appinn.com/markdown/#code\n\n","source":"_posts/ubuntu16-04搭建github-hexo博客.md","raw":"---\ntitle: ubuntu16.04搭建github+hexo博客\ndate: 2016-10-18 21:03:33\ntags: 学习笔记\n---\n材料\n===================\n- ubuntu16.04\n- Github,Git，hexo，node.js，ssh key等\n\n生成SSH keys\n===================\n打开终端,输入  \n    $ ssh-keygen -t rsa -C \"Your_email@example.com\"\n\n回车后会提示：\n\n    Generating public/private rsa key pair.  \n\n继续回车，提示：\n\n    Enter file in which to save the key (~/.ssh/id_rsa):  \n\n这里将SSH keys保存在默认文件夹，直接回车就行了。然后按提示输入你要设置的密码并再次输入确认：\n\n    Enter passphrase (empty 'for' no passphrase):\n    Enter same passphrase again:\n\n接下来就会提示成功：\n\n    Your identification has been saved in ~/.ssh/id_rsa.\n    Your public key has been saved in ~/.ssh/id_rsa.pub.\n    The key fingerprint is:\n    ... Your_email@example.com\n\n在 .ssh 目录下创建一个 config 文件:\n\n    $ cd ~/.ssh\n    $ gedit config\n\n在文件里面输入如下配置信息：\n\n    Host Yourname.github.com         #这里修改成你自己的 host\n    HostName github.com\n    PreferredAuthentications publickey   \n    IdentityFile ~/.ssh/id_rsa    # 这里填入你前面新建的密钥的路径\n    User git\n\n这里输入完成，保存，关闭。回到终端。接下来要查看新建的SSH key是否在运行\n\n    $ ssh-add ~/.ssh/id_rsa\n    $ ssh-add -l\n\n如果显示了刚刚创建的SSH key，则表明已经在运行了。我们需要把这个SSH key添加到github，但这里要使用的是id_rsa.public。用gedit打开id_rsa.public，然后复制里面的内容。打开你的github网页，右上角有个下拉菜单，点击，然后选择setting，在setting页面左边一栏选择SSH and GPG keys。接下来在SSH keys那里选择New SSH key。进入页面后，title随便填吧。key就填刚刚复制的一段内容。之后点击Add SSH key完成添加。\n\n回到终端，输入\n\n    $ ssh -T git@github.com\n    Hi Youname! You’ve successfully authenticated, but GitHub does not provide shell access.\n\n这就代表已经配对成功了。\n\n安装Node.js\n=====================\n\n在终端输入nodejs或者npm，如果没有安装会提示你进行安装，命令如下：\n\n    sudo apt-get update\n    sudo apt-get install nodejs\n    ln -s /usr/bin/nodejs /usr/bin/node\n    sudo apt-get install npm\n\n这里添加了一个用node指向nodejs的软链接，是因为用包管理器安装的话，二进制表文件被叫做 nodejs，但 hexo 用的是 node\n\n安装Hexo\n=====================\n在终端输入下面的命令安装\n\n    $ npm install -g hexo-cli\n\n安装完后进行初始化，进入你要保存博客的目录\n\n    $ hexo init hexo    #初始化，创建一个你专门存放博客文件的文件夹，我这里把文件夹命名为 hexo，你可以改成你想要的名字\n    $ cd hexo              #进入 hexo 目录\n    $ npm install          #安装相关依赖\n    $ npm install hexo-deployer-git --save\n\n测试博客是否能运行\n\n    $ hexo g\n    $ hexo s\n\n终端会显示\n\n    INFO  Start processing\n    INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n\n在浏览器输入 localhost:40000,如果成功的话便会有页面显示出来，否则会跳到404页面。\n\n将hexo部署到github\n=================================\n用gedit打开hexo目录下的_config.yml文件\n\n    $ gedit _config.yml\n\n修改deploy字段：\n    \n    deploy:\n      type: git\n      repository: https://github.com/JereryL/JereryL.github.io.git\n      branch: master\n\n注意：格式必须按照上面所示，否则会报错。保存退出，在终端输入：\n\n    $ hexo g\n    $ hexo d\n\n按照提示输入帐号密码，完成后在浏览器输入自己的github博客地址，看是否正常成功。至此，将hexo部署在github的过程已经完成。\n\n更换hexo主题\n========================\n因为我正在使用的是next主题，所以这里以next主题为例。首先找到next主题的仓库，然后克隆到本机hexo目录下的themes目录，代码如下\n\n    $ cd your-hexo-site\n    $ git clone https://github.com/iissnan/hexo-theme-next themes/next\n\n下载完成后，在themes/next下会生成一个_config.yml配置文件，这里称其为主题配置文件，而在hexo目录下的那个_config.yml文件则称为站点配置文件。\n\n启用主题\n-------------------\n修改站点配置文件：\n\n    theme: next\n\n验证主题，可以在终端输入:\n\n    hexo g\n    hexo s\n\n然后在localhost:4000上查看是否成功修改。\n\n选择主题风格\n------------------\n主题配置文件里面的Scheme字段提供了选择next主题下的3种风格，要切换的话将前面的#号去掉即可\n    \n    #scheme: Muse\n    scheme: Mist\n    #scheme: Pisces\n\n设置语言\n----------------\n修改站点配置语言，将language设置成zh-Hans即可切换为简体中文\n\n    language: zh-Hans\n\n设置菜单\n-----------------------\n    修改主题配置文件，修改如下内容，在启用的菜单项去掉#号，在删除的菜单项加上#号即可\n\n    menu:\n      home: /\n      archives: /archives\n      #about: /about\n      #categories: /categories\n      tags: /tags\n      #commonweal: /404.html\n\n设置头像\n------------------------------\n修改站点配置文件，新增字段 avatar，设置头像的链接地址。例如我的头像放在source/images目录下，则我修改为\n\n    avatar: source/images/avatar.jpg\n\n设置作者昵称\n------------------------------\n修改站点配置未见的author。\n\n设置站点描述\n------------------------\n\n修改站点配置文件，设置description字段即可。\n\n至此，整个站点基本搭建完毕，除此之外，还能加入多说评论系统，但我还没有进行尝试，所以先不做此修改了。最后一点值得注意的是，很多人为了美观，布局，都会删除hello world这篇文章。但不要急着删除，因为在没有其他文章的情况下删除这篇文章，在进行hexo clean后会报错。所以在你写好自己的第一篇文章后才删除这篇文章吧。\n\n参考自：  \n关于在 Ubuntu 上部署 Hexo 到 Github：  \nhttp://www.leyar.me/create-a-blog-with-hexo-in-ubuntu/\n\n史上最详细“截图”搭建Hexo博客并部署到Github  \nhttp://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html  \n\n开始使用NexT:  \nhttp://theme-next.iissnan.com/getting-started.html\n\nMarkdown 语法说明 (简体中文版):  \nhttp://www.appinn.com/markdown/#code\n\n","slug":"ubuntu16-04搭建github-hexo博客","published":1,"updated":"2016-11-14T04:24:10.020Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhkfsa80002z3jfe1rs78wn","content":"<h1 id=\"材料\"><a href=\"#材料\" class=\"headerlink\" title=\"材料\"></a>材料</h1><ul>\n<li>ubuntu16.04</li>\n<li>Github,Git，hexo，node.js，ssh key等</li>\n</ul>\n<h1 id=\"生成SSH-keys\"><a href=\"#生成SSH-keys\" class=\"headerlink\" title=\"生成SSH keys\"></a>生成SSH keys</h1><p>打开终端,输入<br>    $ ssh-keygen -t rsa -C “Your_email@example.com”</p>\n<p>回车后会提示：</p>\n<pre><code>Generating public/private rsa key pair.  \n</code></pre><p>继续回车，提示：</p>\n<pre><code>Enter file in which to save the key (~/.ssh/id_rsa):  \n</code></pre><p>这里将SSH keys保存在默认文件夹，直接回车就行了。然后按提示输入你要设置的密码并再次输入确认：</p>\n<pre><code>Enter passphrase (empty &apos;for&apos; no passphrase):\nEnter same passphrase again:\n</code></pre><p>接下来就会提示成功：</p>\n<pre><code>Your identification has been saved in ~/.ssh/id_rsa.\nYour public key has been saved in ~/.ssh/id_rsa.pub.\nThe key fingerprint is:\n... Your_email@example.com\n</code></pre><p>在 .ssh 目录下创建一个 config 文件:</p>\n<pre><code>$ cd ~/.ssh\n$ gedit config\n</code></pre><p>在文件里面输入如下配置信息：</p>\n<pre><code>Host Yourname.github.com         #这里修改成你自己的 host\nHostName github.com\nPreferredAuthentications publickey   \nIdentityFile ~/.ssh/id_rsa    # 这里填入你前面新建的密钥的路径\nUser git\n</code></pre><p>这里输入完成，保存，关闭。回到终端。接下来要查看新建的SSH key是否在运行</p>\n<pre><code>$ ssh-add ~/.ssh/id_rsa\n$ ssh-add -l\n</code></pre><p>如果显示了刚刚创建的SSH key，则表明已经在运行了。我们需要把这个SSH key添加到github，但这里要使用的是id_rsa.public。用gedit打开id_rsa.public，然后复制里面的内容。打开你的github网页，右上角有个下拉菜单，点击，然后选择setting，在setting页面左边一栏选择SSH and GPG keys。接下来在SSH keys那里选择New SSH key。进入页面后，title随便填吧。key就填刚刚复制的一段内容。之后点击Add SSH key完成添加。</p>\n<p>回到终端，输入</p>\n<pre><code>$ ssh -T git@github.com\nHi Youname! You’ve successfully authenticated, but GitHub does not provide shell access.\n</code></pre><p>这就代表已经配对成功了。</p>\n<h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>在终端输入nodejs或者npm，如果没有安装会提示你进行安装，命令如下：</p>\n<pre><code>sudo apt-get update\nsudo apt-get install nodejs\nln -s /usr/bin/nodejs /usr/bin/node\nsudo apt-get install npm\n</code></pre><p>这里添加了一个用node指向nodejs的软链接，是因为用包管理器安装的话，二进制表文件被叫做 nodejs，但 hexo 用的是 node</p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>在终端输入下面的命令安装</p>\n<pre><code>$ npm install -g hexo-cli\n</code></pre><p>安装完后进行初始化，进入你要保存博客的目录</p>\n<pre><code>$ hexo init hexo    #初始化，创建一个你专门存放博客文件的文件夹，我这里把文件夹命名为 hexo，你可以改成你想要的名字\n$ cd hexo              #进入 hexo 目录\n$ npm install          #安装相关依赖\n$ npm install hexo-deployer-git --save\n</code></pre><p>测试博客是否能运行</p>\n<pre><code>$ hexo g\n$ hexo s\n</code></pre><p>终端会显示</p>\n<pre><code>INFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n</code></pre><p>在浏览器输入 localhost:40000,如果成功的话便会有页面显示出来，否则会跳到404页面。</p>\n<h1 id=\"将hexo部署到github\"><a href=\"#将hexo部署到github\" class=\"headerlink\" title=\"将hexo部署到github\"></a>将hexo部署到github</h1><p>用gedit打开hexo目录下的_config.yml文件</p>\n<pre><code>$ gedit _config.yml\n</code></pre><p>修改deploy字段：</p>\n<pre><code>deploy:\n  type: git\n  repository: https://github.com/JereryL/JereryL.github.io.git\n  branch: master\n</code></pre><p>注意：格式必须按照上面所示，否则会报错。保存退出，在终端输入：</p>\n<pre><code>$ hexo g\n$ hexo d\n</code></pre><p>按照提示输入帐号密码，完成后在浏览器输入自己的github博客地址，看是否正常成功。至此，将hexo部署在github的过程已经完成。</p>\n<h1 id=\"更换hexo主题\"><a href=\"#更换hexo主题\" class=\"headerlink\" title=\"更换hexo主题\"></a>更换hexo主题</h1><p>因为我正在使用的是next主题，所以这里以next主题为例。首先找到next主题的仓库，然后克隆到本机hexo目录下的themes目录，代码如下</p>\n<pre><code>$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>下载完成后，在themes/next下会生成一个_config.yml配置文件，这里称其为主题配置文件，而在hexo目录下的那个_config.yml文件则称为站点配置文件。</p>\n<h2 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h2><p>修改站点配置文件：</p>\n<pre><code>theme: next\n</code></pre><p>验证主题，可以在终端输入:</p>\n<pre><code>hexo g\nhexo s\n</code></pre><p>然后在localhost:4000上查看是否成功修改。</p>\n<h2 id=\"选择主题风格\"><a href=\"#选择主题风格\" class=\"headerlink\" title=\"选择主题风格\"></a>选择主题风格</h2><p>主题配置文件里面的Scheme字段提供了选择next主题下的3种风格，要切换的话将前面的#号去掉即可</p>\n<pre><code>#scheme: Muse\nscheme: Mist\n#scheme: Pisces\n</code></pre><h2 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h2><p>修改站点配置语言，将language设置成zh-Hans即可切换为简体中文</p>\n<pre><code>language: zh-Hans\n</code></pre><h2 id=\"设置菜单\"><a href=\"#设置菜单\" class=\"headerlink\" title=\"设置菜单\"></a>设置菜单</h2><pre><code>修改主题配置文件，修改如下内容，在启用的菜单项去掉#号，在删除的菜单项加上#号即可\n\nmenu:\n  home: /\n  archives: /archives\n  #about: /about\n  #categories: /categories\n  tags: /tags\n  #commonweal: /404.html\n</code></pre><h2 id=\"设置头像\"><a href=\"#设置头像\" class=\"headerlink\" title=\"设置头像\"></a>设置头像</h2><p>修改站点配置文件，新增字段 avatar，设置头像的链接地址。例如我的头像放在source/images目录下，则我修改为</p>\n<pre><code>avatar: source/images/avatar.jpg\n</code></pre><h2 id=\"设置作者昵称\"><a href=\"#设置作者昵称\" class=\"headerlink\" title=\"设置作者昵称\"></a>设置作者昵称</h2><p>修改站点配置未见的author。</p>\n<h2 id=\"设置站点描述\"><a href=\"#设置站点描述\" class=\"headerlink\" title=\"设置站点描述\"></a>设置站点描述</h2><p>修改站点配置文件，设置description字段即可。</p>\n<p>至此，整个站点基本搭建完毕，除此之外，还能加入多说评论系统，但我还没有进行尝试，所以先不做此修改了。最后一点值得注意的是，很多人为了美观，布局，都会删除hello world这篇文章。但不要急着删除，因为在没有其他文章的情况下删除这篇文章，在进行hexo clean后会报错。所以在你写好自己的第一篇文章后才删除这篇文章吧。</p>\n<p>参考自：<br>关于在 Ubuntu 上部署 Hexo 到 Github：<br><a href=\"http://www.leyar.me/create-a-blog-with-hexo-in-ubuntu/\" target=\"_blank\" rel=\"external\">http://www.leyar.me/create-a-blog-with-hexo-in-ubuntu/</a></p>\n<p>史上最详细“截图”搭建Hexo博客并部署到Github<br><a href=\"http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html\" target=\"_blank\" rel=\"external\">http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html</a>  </p>\n<p>开始使用NexT:<br><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/getting-started.html</a></p>\n<p>Markdown 语法说明 (简体中文版):<br><a href=\"http://www.appinn.com/markdown/#code\" target=\"_blank\" rel=\"external\">http://www.appinn.com/markdown/#code</a></p>\n","excerpt":"","more":"<h1 id=\"材料\"><a href=\"#材料\" class=\"headerlink\" title=\"材料\"></a>材料</h1><ul>\n<li>ubuntu16.04</li>\n<li>Github,Git，hexo，node.js，ssh key等</li>\n</ul>\n<h1 id=\"生成SSH-keys\"><a href=\"#生成SSH-keys\" class=\"headerlink\" title=\"生成SSH keys\"></a>生成SSH keys</h1><p>打开终端,输入<br>    $ ssh-keygen -t rsa -C “Your_email@example.com”</p>\n<p>回车后会提示：</p>\n<pre><code>Generating public/private rsa key pair.  \n</code></pre><p>继续回车，提示：</p>\n<pre><code>Enter file in which to save the key (~/.ssh/id_rsa):  \n</code></pre><p>这里将SSH keys保存在默认文件夹，直接回车就行了。然后按提示输入你要设置的密码并再次输入确认：</p>\n<pre><code>Enter passphrase (empty &apos;for&apos; no passphrase):\nEnter same passphrase again:\n</code></pre><p>接下来就会提示成功：</p>\n<pre><code>Your identification has been saved in ~/.ssh/id_rsa.\nYour public key has been saved in ~/.ssh/id_rsa.pub.\nThe key fingerprint is:\n... Your_email@example.com\n</code></pre><p>在 .ssh 目录下创建一个 config 文件:</p>\n<pre><code>$ cd ~/.ssh\n$ gedit config\n</code></pre><p>在文件里面输入如下配置信息：</p>\n<pre><code>Host Yourname.github.com         #这里修改成你自己的 host\nHostName github.com\nPreferredAuthentications publickey   \nIdentityFile ~/.ssh/id_rsa    # 这里填入你前面新建的密钥的路径\nUser git\n</code></pre><p>这里输入完成，保存，关闭。回到终端。接下来要查看新建的SSH key是否在运行</p>\n<pre><code>$ ssh-add ~/.ssh/id_rsa\n$ ssh-add -l\n</code></pre><p>如果显示了刚刚创建的SSH key，则表明已经在运行了。我们需要把这个SSH key添加到github，但这里要使用的是id_rsa.public。用gedit打开id_rsa.public，然后复制里面的内容。打开你的github网页，右上角有个下拉菜单，点击，然后选择setting，在setting页面左边一栏选择SSH and GPG keys。接下来在SSH keys那里选择New SSH key。进入页面后，title随便填吧。key就填刚刚复制的一段内容。之后点击Add SSH key完成添加。</p>\n<p>回到终端，输入</p>\n<pre><code>$ ssh -T git@github.com\nHi Youname! You’ve successfully authenticated, but GitHub does not provide shell access.\n</code></pre><p>这就代表已经配对成功了。</p>\n<h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>在终端输入nodejs或者npm，如果没有安装会提示你进行安装，命令如下：</p>\n<pre><code>sudo apt-get update\nsudo apt-get install nodejs\nln -s /usr/bin/nodejs /usr/bin/node\nsudo apt-get install npm\n</code></pre><p>这里添加了一个用node指向nodejs的软链接，是因为用包管理器安装的话，二进制表文件被叫做 nodejs，但 hexo 用的是 node</p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>在终端输入下面的命令安装</p>\n<pre><code>$ npm install -g hexo-cli\n</code></pre><p>安装完后进行初始化，进入你要保存博客的目录</p>\n<pre><code>$ hexo init hexo    #初始化，创建一个你专门存放博客文件的文件夹，我这里把文件夹命名为 hexo，你可以改成你想要的名字\n$ cd hexo              #进入 hexo 目录\n$ npm install          #安装相关依赖\n$ npm install hexo-deployer-git --save\n</code></pre><p>测试博客是否能运行</p>\n<pre><code>$ hexo g\n$ hexo s\n</code></pre><p>终端会显示</p>\n<pre><code>INFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n</code></pre><p>在浏览器输入 localhost:40000,如果成功的话便会有页面显示出来，否则会跳到404页面。</p>\n<h1 id=\"将hexo部署到github\"><a href=\"#将hexo部署到github\" class=\"headerlink\" title=\"将hexo部署到github\"></a>将hexo部署到github</h1><p>用gedit打开hexo目录下的_config.yml文件</p>\n<pre><code>$ gedit _config.yml\n</code></pre><p>修改deploy字段：</p>\n<pre><code>deploy:\n  type: git\n  repository: https://github.com/JereryL/JereryL.github.io.git\n  branch: master\n</code></pre><p>注意：格式必须按照上面所示，否则会报错。保存退出，在终端输入：</p>\n<pre><code>$ hexo g\n$ hexo d\n</code></pre><p>按照提示输入帐号密码，完成后在浏览器输入自己的github博客地址，看是否正常成功。至此，将hexo部署在github的过程已经完成。</p>\n<h1 id=\"更换hexo主题\"><a href=\"#更换hexo主题\" class=\"headerlink\" title=\"更换hexo主题\"></a>更换hexo主题</h1><p>因为我正在使用的是next主题，所以这里以next主题为例。首先找到next主题的仓库，然后克隆到本机hexo目录下的themes目录，代码如下</p>\n<pre><code>$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>下载完成后，在themes/next下会生成一个_config.yml配置文件，这里称其为主题配置文件，而在hexo目录下的那个_config.yml文件则称为站点配置文件。</p>\n<h2 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h2><p>修改站点配置文件：</p>\n<pre><code>theme: next\n</code></pre><p>验证主题，可以在终端输入:</p>\n<pre><code>hexo g\nhexo s\n</code></pre><p>然后在localhost:4000上查看是否成功修改。</p>\n<h2 id=\"选择主题风格\"><a href=\"#选择主题风格\" class=\"headerlink\" title=\"选择主题风格\"></a>选择主题风格</h2><p>主题配置文件里面的Scheme字段提供了选择next主题下的3种风格，要切换的话将前面的#号去掉即可</p>\n<pre><code>#scheme: Muse\nscheme: Mist\n#scheme: Pisces\n</code></pre><h2 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h2><p>修改站点配置语言，将language设置成zh-Hans即可切换为简体中文</p>\n<pre><code>language: zh-Hans\n</code></pre><h2 id=\"设置菜单\"><a href=\"#设置菜单\" class=\"headerlink\" title=\"设置菜单\"></a>设置菜单</h2><pre><code>修改主题配置文件，修改如下内容，在启用的菜单项去掉#号，在删除的菜单项加上#号即可\n\nmenu:\n  home: /\n  archives: /archives\n  #about: /about\n  #categories: /categories\n  tags: /tags\n  #commonweal: /404.html\n</code></pre><h2 id=\"设置头像\"><a href=\"#设置头像\" class=\"headerlink\" title=\"设置头像\"></a>设置头像</h2><p>修改站点配置文件，新增字段 avatar，设置头像的链接地址。例如我的头像放在source/images目录下，则我修改为</p>\n<pre><code>avatar: source/images/avatar.jpg\n</code></pre><h2 id=\"设置作者昵称\"><a href=\"#设置作者昵称\" class=\"headerlink\" title=\"设置作者昵称\"></a>设置作者昵称</h2><p>修改站点配置未见的author。</p>\n<h2 id=\"设置站点描述\"><a href=\"#设置站点描述\" class=\"headerlink\" title=\"设置站点描述\"></a>设置站点描述</h2><p>修改站点配置文件，设置description字段即可。</p>\n<p>至此，整个站点基本搭建完毕，除此之外，还能加入多说评论系统，但我还没有进行尝试，所以先不做此修改了。最后一点值得注意的是，很多人为了美观，布局，都会删除hello world这篇文章。但不要急着删除，因为在没有其他文章的情况下删除这篇文章，在进行hexo clean后会报错。所以在你写好自己的第一篇文章后才删除这篇文章吧。</p>\n<p>参考自：<br>关于在 Ubuntu 上部署 Hexo 到 Github：<br><a href=\"http://www.leyar.me/create-a-blog-with-hexo-in-ubuntu/\">http://www.leyar.me/create-a-blog-with-hexo-in-ubuntu/</a></p>\n<p>史上最详细“截图”搭建Hexo博客并部署到Github<br><a href=\"http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html\">http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html</a>  </p>\n<p>开始使用NexT:<br><a href=\"http://theme-next.iissnan.com/getting-started.html\">http://theme-next.iissnan.com/getting-started.html</a></p>\n<p>Markdown 语法说明 (简体中文版):<br><a href=\"http://www.appinn.com/markdown/#code\">http://www.appinn.com/markdown/#code</a></p>\n"},{"title":"动态数组","date":"2016-11-02T15:03:01.000Z","_content":"今天去了一个面试，c/c++软件开发的。面试的时候面试官就问我如何定义一个动态的二维数组。我当时第一反应就是用vector，但是vector定义的时候能输入两个参数吗？后来我就跟面试官讨论了一下，他就说vector也不是不可以，但是他本义是考我对指针的使用。回到宿舍，我便沿着指针的思路做了一下。\n\n思路：首先定义一个指针p2，给这个指针分配你想指定大小的内存，作为数组的第二维。然后定义一个指针的指针p1，作为数组的第一维，指向p2。代码如下：\n\n    #include <iostream>\n    #include <stdlib.h>\n\n    using namespace std;\n\n    int main()\n    {\n      int n = 1;\n      int m = 2;\n      int **p1;\n      int *p2;\n      p1 = (int**)malloc(sizeof(int)*n);\n      p2 = (int*)malloc(sizeof(int)*m);\n      p2[0] = 1;\n      p2[1] = 2;\n      *p1 = p2;\n      cout << p1[0][0] << endl;\n      cout << p1[0][1] << endl;\n      free(p1);\n      free(p2);\n      cin.get();\n    }","source":"_posts/动态数组.md","raw":"---\ntitle: 动态数组\ndate: 2016-11-02 23:03:01\ntags: 学习笔记\n---\n今天去了一个面试，c/c++软件开发的。面试的时候面试官就问我如何定义一个动态的二维数组。我当时第一反应就是用vector，但是vector定义的时候能输入两个参数吗？后来我就跟面试官讨论了一下，他就说vector也不是不可以，但是他本义是考我对指针的使用。回到宿舍，我便沿着指针的思路做了一下。\n\n思路：首先定义一个指针p2，给这个指针分配你想指定大小的内存，作为数组的第二维。然后定义一个指针的指针p1，作为数组的第一维，指向p2。代码如下：\n\n    #include <iostream>\n    #include <stdlib.h>\n\n    using namespace std;\n\n    int main()\n    {\n      int n = 1;\n      int m = 2;\n      int **p1;\n      int *p2;\n      p1 = (int**)malloc(sizeof(int)*n);\n      p2 = (int*)malloc(sizeof(int)*m);\n      p2[0] = 1;\n      p2[1] = 2;\n      *p1 = p2;\n      cout << p1[0][0] << endl;\n      cout << p1[0][1] << endl;\n      free(p1);\n      free(p2);\n      cin.get();\n    }","slug":"动态数组","published":1,"updated":"2016-11-14T01:31:57.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhkfsam0004z3jfm4wpcpwz","content":"<p>今天去了一个面试，c/c++软件开发的。面试的时候面试官就问我如何定义一个动态的二维数组。我当时第一反应就是用vector，但是vector定义的时候能输入两个参数吗？后来我就跟面试官讨论了一下，他就说vector也不是不可以，但是他本义是考我对指针的使用。回到宿舍，我便沿着指针的思路做了一下。</p>\n<p>思路：首先定义一个指针p2，给这个指针分配你想指定大小的内存，作为数组的第二维。然后定义一个指针的指针p1，作为数组的第一维，指向p2。代码如下：</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;stdlib.h&gt;\n\nusing namespace std;\n\nint main()\n{\n  int n = 1;\n  int m = 2;\n  int **p1;\n  int *p2;\n  p1 = (int**)malloc(sizeof(int)*n);\n  p2 = (int*)malloc(sizeof(int)*m);\n  p2[0] = 1;\n  p2[1] = 2;\n  *p1 = p2;\n  cout &lt;&lt; p1[0][0] &lt;&lt; endl;\n  cout &lt;&lt; p1[0][1] &lt;&lt; endl;\n  free(p1);\n  free(p2);\n  cin.get();\n}\n</code></pre>","excerpt":"","more":"<p>今天去了一个面试，c/c++软件开发的。面试的时候面试官就问我如何定义一个动态的二维数组。我当时第一反应就是用vector，但是vector定义的时候能输入两个参数吗？后来我就跟面试官讨论了一下，他就说vector也不是不可以，但是他本义是考我对指针的使用。回到宿舍，我便沿着指针的思路做了一下。</p>\n<p>思路：首先定义一个指针p2，给这个指针分配你想指定大小的内存，作为数组的第二维。然后定义一个指针的指针p1，作为数组的第一维，指向p2。代码如下：</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;stdlib.h&gt;\n\nusing namespace std;\n\nint main()\n{\n  int n = 1;\n  int m = 2;\n  int **p1;\n  int *p2;\n  p1 = (int**)malloc(sizeof(int)*n);\n  p2 = (int*)malloc(sizeof(int)*m);\n  p2[0] = 1;\n  p2[1] = 2;\n  *p1 = p2;\n  cout &lt;&lt; p1[0][0] &lt;&lt; endl;\n  cout &lt;&lt; p1[0][1] &lt;&lt; endl;\n  free(p1);\n  free(p2);\n  cin.get();\n}\n</code></pre>"},{"title":"在多台电脑管理一个github-hexo博客","date":"2016-10-23T02:07:41.000Z","_content":"前言\n=============\n一般情况下，我们部署好的博客只能在一台电脑上管理，因为要管理博客需要在博客的文件夹下操作。所以我们要找到一个方法共享这个文件夹。而github本身就是一个代码托管仓库，何不就直接将代码托管到github上。\n\n准备\n=============\n- 两台电脑\n- 两台电脑的SSH key都添加上github\n- 两台电脑都已经装好Git,node.js,hexo\n\n操作步骤\n============\n\n初始化仓库\n------------\n在终端或者Git Bash（以下统称终端），进入到博客目录下。输入命令\n    \n    $ git init\n\n这个命令是初始化一个git仓库，这样，这个博客文件夹就变成了一个仓库了。\n\n上传代码\n------------\n在终端输入\n\n    $ git add .\n    $ git commit -m \"first commit\"\n    $ git remote add https://github.com/JereryL/JereryL.github.io.git\n    $ git push -u origin master\n\n第三条命令要写自己博客的仓库地址。这样，文件夹中的内容就上传到了github仓库了。进入到github仓库中查看，发现一个问题，这里面的文件原本是public文件夹里面的文件，但现在变成了博客根目录下的所有文件了。而且，打开博客网址，发现出错了。于是，我新建一个分支，用来保存博客根文件夹下的文件，master分支下就用来保存生成的网站文件。在终端输入命令如下\n\n    $ git branch hexo\n    $ git checkout hexo\n    $ git push origin hexo\n\n这样，就创建了hexo分支并提交上github上了。我们最好把hexo分支设置为默认分支,在github上进入到你的仓库，在上面一栏找到\"Settings\"，点击进入，在\"Option\"一栏选择\"Branches\",修改\"Default branch\"为hexo,点击\"Update\"保存修改。这是回到终端，重新提交代码到hexo分支\n\n    $ git add .\n    $ git commit -m \"branch hexo\"\n    $ git push origin hexo\n\n这时在github仓库上可以看见提交的代码了。在终端重新生成博客\n\n    $ hexo g\n    $ hexo d\n\n进入github仓库的master仓库，可以看见这个分支的代码已经正确生成。\n\n克隆仓库\n--------------\n到另一台电脑，在终端进入到你想保存仓库的地址，然后输入\n\n    $ git clone https://github.com/JereryL/JereryL.github.io.git\n\n这时，生成了一个目录JereryL.github.io,在这个目录先安装一个包\n\n    $ npm install hexo-deployer-git --save\n\n我们尝试在这里生成一下博客\n\n    $ hexo g\n    $ hexo d\n\n在github仓库上发现并不能正确生成网站文件,解决方法是将JereryL.github.io文件夹下的.deploy_git删除，重新生成一下，问题解决。\n\n至此，整个过程完毕。平时修改完博客，只要提交一下文件就行了\n\n    git add .\n    git commit -m \"备注\"\n    git push origin hexo\n\n参考自：  \n《使用hexo,如果换了电脑怎么更新博客》  \nhttps://www.zhihu.com/question/21193762\n","source":"_posts/在多台电脑管理一个github-hexo博客.md","raw":"---\ntitle: 在多台电脑管理一个github-hexo博客\ndate: 2016-10-23 10:07:41\ntags: 学习笔记\n---\n前言\n=============\n一般情况下，我们部署好的博客只能在一台电脑上管理，因为要管理博客需要在博客的文件夹下操作。所以我们要找到一个方法共享这个文件夹。而github本身就是一个代码托管仓库，何不就直接将代码托管到github上。\n\n准备\n=============\n- 两台电脑\n- 两台电脑的SSH key都添加上github\n- 两台电脑都已经装好Git,node.js,hexo\n\n操作步骤\n============\n\n初始化仓库\n------------\n在终端或者Git Bash（以下统称终端），进入到博客目录下。输入命令\n    \n    $ git init\n\n这个命令是初始化一个git仓库，这样，这个博客文件夹就变成了一个仓库了。\n\n上传代码\n------------\n在终端输入\n\n    $ git add .\n    $ git commit -m \"first commit\"\n    $ git remote add https://github.com/JereryL/JereryL.github.io.git\n    $ git push -u origin master\n\n第三条命令要写自己博客的仓库地址。这样，文件夹中的内容就上传到了github仓库了。进入到github仓库中查看，发现一个问题，这里面的文件原本是public文件夹里面的文件，但现在变成了博客根目录下的所有文件了。而且，打开博客网址，发现出错了。于是，我新建一个分支，用来保存博客根文件夹下的文件，master分支下就用来保存生成的网站文件。在终端输入命令如下\n\n    $ git branch hexo\n    $ git checkout hexo\n    $ git push origin hexo\n\n这样，就创建了hexo分支并提交上github上了。我们最好把hexo分支设置为默认分支,在github上进入到你的仓库，在上面一栏找到\"Settings\"，点击进入，在\"Option\"一栏选择\"Branches\",修改\"Default branch\"为hexo,点击\"Update\"保存修改。这是回到终端，重新提交代码到hexo分支\n\n    $ git add .\n    $ git commit -m \"branch hexo\"\n    $ git push origin hexo\n\n这时在github仓库上可以看见提交的代码了。在终端重新生成博客\n\n    $ hexo g\n    $ hexo d\n\n进入github仓库的master仓库，可以看见这个分支的代码已经正确生成。\n\n克隆仓库\n--------------\n到另一台电脑，在终端进入到你想保存仓库的地址，然后输入\n\n    $ git clone https://github.com/JereryL/JereryL.github.io.git\n\n这时，生成了一个目录JereryL.github.io,在这个目录先安装一个包\n\n    $ npm install hexo-deployer-git --save\n\n我们尝试在这里生成一下博客\n\n    $ hexo g\n    $ hexo d\n\n在github仓库上发现并不能正确生成网站文件,解决方法是将JereryL.github.io文件夹下的.deploy_git删除，重新生成一下，问题解决。\n\n至此，整个过程完毕。平时修改完博客，只要提交一下文件就行了\n\n    git add .\n    git commit -m \"备注\"\n    git push origin hexo\n\n参考自：  \n《使用hexo,如果换了电脑怎么更新博客》  \nhttps://www.zhihu.com/question/21193762\n","slug":"在多台电脑管理一个github-hexo博客","published":1,"updated":"2016-11-14T04:02:54.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhkfsaq0005z3jfh9a251z3","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>一般情况下，我们部署好的博客只能在一台电脑上管理，因为要管理博客需要在博客的文件夹下操作。所以我们要找到一个方法共享这个文件夹。而github本身就是一个代码托管仓库，何不就直接将代码托管到github上。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><ul>\n<li>两台电脑</li>\n<li>两台电脑的SSH key都添加上github</li>\n<li>两台电脑都已经装好Git,node.js,hexo</li>\n</ul>\n<h1 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h1><h2 id=\"初始化仓库\"><a href=\"#初始化仓库\" class=\"headerlink\" title=\"初始化仓库\"></a>初始化仓库</h2><p>在终端或者Git Bash（以下统称终端），进入到博客目录下。输入命令</p>\n<pre><code>$ git init\n</code></pre><p>这个命令是初始化一个git仓库，这样，这个博客文件夹就变成了一个仓库了。</p>\n<h2 id=\"上传代码\"><a href=\"#上传代码\" class=\"headerlink\" title=\"上传代码\"></a>上传代码</h2><p>在终端输入</p>\n<pre><code>$ git add .\n$ git commit -m &quot;first commit&quot;\n$ git remote add https://github.com/JereryL/JereryL.github.io.git\n$ git push -u origin master\n</code></pre><p>第三条命令要写自己博客的仓库地址。这样，文件夹中的内容就上传到了github仓库了。进入到github仓库中查看，发现一个问题，这里面的文件原本是public文件夹里面的文件，但现在变成了博客根目录下的所有文件了。而且，打开博客网址，发现出错了。于是，我新建一个分支，用来保存博客根文件夹下的文件，master分支下就用来保存生成的网站文件。在终端输入命令如下</p>\n<pre><code>$ git branch hexo\n$ git checkout hexo\n$ git push origin hexo\n</code></pre><p>这样，就创建了hexo分支并提交上github上了。我们最好把hexo分支设置为默认分支,在github上进入到你的仓库，在上面一栏找到”Settings”，点击进入，在”Option”一栏选择”Branches”,修改”Default branch”为hexo,点击”Update”保存修改。这是回到终端，重新提交代码到hexo分支</p>\n<pre><code>$ git add .\n$ git commit -m &quot;branch hexo&quot;\n$ git push origin hexo\n</code></pre><p>这时在github仓库上可以看见提交的代码了。在终端重新生成博客</p>\n<pre><code>$ hexo g\n$ hexo d\n</code></pre><p>进入github仓库的master仓库，可以看见这个分支的代码已经正确生成。</p>\n<h2 id=\"克隆仓库\"><a href=\"#克隆仓库\" class=\"headerlink\" title=\"克隆仓库\"></a>克隆仓库</h2><p>到另一台电脑，在终端进入到你想保存仓库的地址，然后输入</p>\n<pre><code>$ git clone https://github.com/JereryL/JereryL.github.io.git\n</code></pre><p>这时，生成了一个目录JereryL.github.io,在这个目录先安装一个包</p>\n<pre><code>$ npm install hexo-deployer-git --save\n</code></pre><p>我们尝试在这里生成一下博客</p>\n<pre><code>$ hexo g\n$ hexo d\n</code></pre><p>在github仓库上发现并不能正确生成网站文件,解决方法是将JereryL.github.io文件夹下的.deploy_git删除，重新生成一下，问题解决。</p>\n<p>至此，整个过程完毕。平时修改完博客，只要提交一下文件就行了</p>\n<pre><code>git add .\ngit commit -m &quot;备注&quot;\ngit push origin hexo\n</code></pre><p>参考自：<br>《使用hexo,如果换了电脑怎么更新博客》<br><a href=\"https://www.zhihu.com/question/21193762\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/21193762</a></p>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>一般情况下，我们部署好的博客只能在一台电脑上管理，因为要管理博客需要在博客的文件夹下操作。所以我们要找到一个方法共享这个文件夹。而github本身就是一个代码托管仓库，何不就直接将代码托管到github上。</p>\n<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><ul>\n<li>两台电脑</li>\n<li>两台电脑的SSH key都添加上github</li>\n<li>两台电脑都已经装好Git,node.js,hexo</li>\n</ul>\n<h1 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h1><h2 id=\"初始化仓库\"><a href=\"#初始化仓库\" class=\"headerlink\" title=\"初始化仓库\"></a>初始化仓库</h2><p>在终端或者Git Bash（以下统称终端），进入到博客目录下。输入命令</p>\n<pre><code>$ git init\n</code></pre><p>这个命令是初始化一个git仓库，这样，这个博客文件夹就变成了一个仓库了。</p>\n<h2 id=\"上传代码\"><a href=\"#上传代码\" class=\"headerlink\" title=\"上传代码\"></a>上传代码</h2><p>在终端输入</p>\n<pre><code>$ git add .\n$ git commit -m &quot;first commit&quot;\n$ git remote add https://github.com/JereryL/JereryL.github.io.git\n$ git push -u origin master\n</code></pre><p>第三条命令要写自己博客的仓库地址。这样，文件夹中的内容就上传到了github仓库了。进入到github仓库中查看，发现一个问题，这里面的文件原本是public文件夹里面的文件，但现在变成了博客根目录下的所有文件了。而且，打开博客网址，发现出错了。于是，我新建一个分支，用来保存博客根文件夹下的文件，master分支下就用来保存生成的网站文件。在终端输入命令如下</p>\n<pre><code>$ git branch hexo\n$ git checkout hexo\n$ git push origin hexo\n</code></pre><p>这样，就创建了hexo分支并提交上github上了。我们最好把hexo分支设置为默认分支,在github上进入到你的仓库，在上面一栏找到”Settings”，点击进入，在”Option”一栏选择”Branches”,修改”Default branch”为hexo,点击”Update”保存修改。这是回到终端，重新提交代码到hexo分支</p>\n<pre><code>$ git add .\n$ git commit -m &quot;branch hexo&quot;\n$ git push origin hexo\n</code></pre><p>这时在github仓库上可以看见提交的代码了。在终端重新生成博客</p>\n<pre><code>$ hexo g\n$ hexo d\n</code></pre><p>进入github仓库的master仓库，可以看见这个分支的代码已经正确生成。</p>\n<h2 id=\"克隆仓库\"><a href=\"#克隆仓库\" class=\"headerlink\" title=\"克隆仓库\"></a>克隆仓库</h2><p>到另一台电脑，在终端进入到你想保存仓库的地址，然后输入</p>\n<pre><code>$ git clone https://github.com/JereryL/JereryL.github.io.git\n</code></pre><p>这时，生成了一个目录JereryL.github.io,在这个目录先安装一个包</p>\n<pre><code>$ npm install hexo-deployer-git --save\n</code></pre><p>我们尝试在这里生成一下博客</p>\n<pre><code>$ hexo g\n$ hexo d\n</code></pre><p>在github仓库上发现并不能正确生成网站文件,解决方法是将JereryL.github.io文件夹下的.deploy_git删除，重新生成一下，问题解决。</p>\n<p>至此，整个过程完毕。平时修改完博客，只要提交一下文件就行了</p>\n<pre><code>git add .\ngit commit -m &quot;备注&quot;\ngit push origin hexo\n</code></pre><p>参考自：<br>《使用hexo,如果换了电脑怎么更新博客》<br><a href=\"https://www.zhihu.com/question/21193762\">https://www.zhihu.com/question/21193762</a></p>\n"},{"title":"基于windows10搭建github+hexo博客","date":"2016-10-22T05:57:39.000Z","_content":"材料\n=============\n- windows 10\n- Git\n- node.js\n- github 账号\n- hexo\n\n安装Git\n==============\n进入Git的官方网站下载，我选择setup版本，因为Portable版本比较大，而且听说setup版本跟Portable版本区别不大。  \nhttps://git-scm.com/download/win  \n安装的时候有很多选项，我们使用默认配置，一直选择下一步就行了。\n\n安装node.js\n==============\n进入nodejs的官网下载，安装的时候一直选择下一步默认安装就可以了。  \nhttps://nodejs.org/en/\n\n安装hexo\n==============\n打开Git Bash，输入如下命令安装hexo\n\n    $ npm install -g hexo-cli\n    \n进入你想保存博客文件的目录，然后输入以下命令初始化你的博客\n\n    $ hexo init hexo\n    \n进入到hexo文件夹，安装一个依赖(例如我的hexo安装在d盘下)\n\n    $ cd d:/hexo\n    $ npm install hexo-deployer-git --save\n    \n至此，hexo博客已经生成完毕，接下来就要测试一下，在Git Bash进入hexo目录，然后输入\n   \n    $ hexo g\n    $ hexo s\n    \n在浏览器输入localhost:4000，可以看见搭建的hexo博客了。\n\n生成SSH key\n===============\n在Git Bash中输入\n\n    $ ssh-keygen -t rsa -C \"你在github上注册的邮箱\"\n\n例如，我的账号为\"ljhjerery@sina.com\",所以我就输入\n\n    $ ssh-keygen -t rsa -C \"ljhjerery@sina.com\"\n\n按回车后，它会显示如下提示\n\n    Generating public/private rsa key pair.\n    Enter file in which to save the key (/c/Users/Vincent/.ssh/id_rsa):\n    \n按回车就行了，生成的SSH key会保存到括号里面的文件中，例如我的SSH key会生成在/c/Users/Vincent/.ssh/id_rsa文件中。然后它会提示你设置密码，如果不设置就空着。\n\n    Enter passphrase (empty for no passphrase):\n    Enter same passphrase again:\n\n到此它会显示提示\n\n    Your identification has been saved in /c/Users/Vincent/.ssh/id_rsa.\n    Your public key has been saved in /c/Users/Vincent/.ssh/id_rsa.pub.\n    The key fingerprint is:\n\n至此，SSH key已经生成成功。\n\n建立github仓库\n=================\n进入到注册好的github账号，点击\"new repository\"。在 \"Creat a new repository\"页面，设置\"Repository name\",这个名称比较关键，必须为\"你的用户名.github.io\",例如我的用户名为\"JereryL\",所以我就设置为\"JereryL.github.io\"。修改完毕后，其他设置默认就可以了，然后点击\"Creat repository\"，创建完毕。\n\n在github添加SSH key\n====================\n在github页面的右上角有两个下拉菜单，点击右边的那个下拉菜单，选择\"Settings\"。在“Personal Settings”这一栏中选择“SSH and GPG keys”。在\"SSH keys\"一栏中点击\"New SSH key\"，\"title\"可以随便填。然后将id_rsa.pub里面的内容复制到\"Key\"里（id_rsa.pub在id_rsa同一个目录里）。最后，点击\"Add SSH key\"，完成添加。\n\n将hexo部署上github\n====================\n进入hexo博客所在文件夹，打开_config.yml文件，修改deploy字段如下\n\n    deploy:\n    type: git\n    repository: https://github.com/JereryL/JereryL.github.io.git\n    branch: master\n\nrepository要填写你的仓库地址。修改完后，保存退出，回到终端。输入命令如下\n\n    $ hexo g\n    $ hexo d\n\n如果是第一次使用，将要求设置用户名和密码，根据提示设置便可以了。至此，hexo博客已经部署到github上了，可以在浏览器输入你的博客地址便可浏览。博客的地址为一开始设置的仓库名字，例如我的是  \nJereryL.github.io\n\n更换hexo主题\n========================\n因为我正在使用的是next主题，所以这里以next主题为例。首先找到next主题的仓库，然后克隆到本机hexo目录下的themes目录，代码如下\n\n    $ cd your-hexo-site\n    $ git clone https://github.com/iissnan/hexo-theme-next themes/next\n\n下载完成后，在themes/next下会生成一个_config.yml配置文件，这里称其为主题配置文件，而在hexo目录下的那个_config.yml文件则称为站点配置文件。\n\n启用主题\n-------------------\n修改站点配置文件：\n\n    theme: next\n\n验证主题，可以在终端输入:\n\n    $ hexo g\n    $ hexo s\n\n然后在localhost:4000上查看是否成功修改。\n\n选择主题风格\n------------------\n主题配置文件里面的Scheme字段提供了选择next主题下的3种风格，要切换的话将前面的#号去掉即可\n     \n    #scheme: Muse\n    scheme: Mist\n    #scheme: Pisces\n\n设置语言\n----------------\n修改站点配置语言，将language设置成zh-Hans即可切换为简体中文\n\n    language: zh-Hans\n\n设置菜单\n-----------------------\n    修改主题配置文件，修改如下内容，在启用的菜单项去掉#号，在删除的菜单项加上#号即可\n\n    menu:\n      home: /\n      archives: /archives\n      #about: /about\n      #categories: /categories\n      tags: /tags\n      #commonweal: /404.html\n\n设置头像\n------------------------------\n修改站点配置文件，新增字段 avatar，设置头像的链接地址。例如我的头像放在source/images目录下，则我修改为\n\n    avatar: source/images/avatar.jpg\n\n设置作者昵称\n------------------------------\n修改站点配置未见的author。\n\n设置站点描述\n------------------------\n修改站点配置文件，设置description字段即可。\n\n至此，整个站点基本搭建完毕，除此之外，还能加入多说评论系统，但我还没有进行尝试，所以先不做此修改了。最后一点值得注意的是，很多人为了美观，布局，都会删除hello world这篇文章。但不要急着删除，因为在没有其他文章的情况下删除这篇文章，在进行hexo clean后会报错。所以在你写好自己的第一篇文章后才删除这篇文章吧。\n","source":"_posts/基于windows10搭建github-hexo博客.md","raw":"---\ntitle: 基于windows10搭建github+hexo博客\ndate: 2016-10-22 13:57:39\ntags: 学习笔记\n---\n材料\n=============\n- windows 10\n- Git\n- node.js\n- github 账号\n- hexo\n\n安装Git\n==============\n进入Git的官方网站下载，我选择setup版本，因为Portable版本比较大，而且听说setup版本跟Portable版本区别不大。  \nhttps://git-scm.com/download/win  \n安装的时候有很多选项，我们使用默认配置，一直选择下一步就行了。\n\n安装node.js\n==============\n进入nodejs的官网下载，安装的时候一直选择下一步默认安装就可以了。  \nhttps://nodejs.org/en/\n\n安装hexo\n==============\n打开Git Bash，输入如下命令安装hexo\n\n    $ npm install -g hexo-cli\n    \n进入你想保存博客文件的目录，然后输入以下命令初始化你的博客\n\n    $ hexo init hexo\n    \n进入到hexo文件夹，安装一个依赖(例如我的hexo安装在d盘下)\n\n    $ cd d:/hexo\n    $ npm install hexo-deployer-git --save\n    \n至此，hexo博客已经生成完毕，接下来就要测试一下，在Git Bash进入hexo目录，然后输入\n   \n    $ hexo g\n    $ hexo s\n    \n在浏览器输入localhost:4000，可以看见搭建的hexo博客了。\n\n生成SSH key\n===============\n在Git Bash中输入\n\n    $ ssh-keygen -t rsa -C \"你在github上注册的邮箱\"\n\n例如，我的账号为\"ljhjerery@sina.com\",所以我就输入\n\n    $ ssh-keygen -t rsa -C \"ljhjerery@sina.com\"\n\n按回车后，它会显示如下提示\n\n    Generating public/private rsa key pair.\n    Enter file in which to save the key (/c/Users/Vincent/.ssh/id_rsa):\n    \n按回车就行了，生成的SSH key会保存到括号里面的文件中，例如我的SSH key会生成在/c/Users/Vincent/.ssh/id_rsa文件中。然后它会提示你设置密码，如果不设置就空着。\n\n    Enter passphrase (empty for no passphrase):\n    Enter same passphrase again:\n\n到此它会显示提示\n\n    Your identification has been saved in /c/Users/Vincent/.ssh/id_rsa.\n    Your public key has been saved in /c/Users/Vincent/.ssh/id_rsa.pub.\n    The key fingerprint is:\n\n至此，SSH key已经生成成功。\n\n建立github仓库\n=================\n进入到注册好的github账号，点击\"new repository\"。在 \"Creat a new repository\"页面，设置\"Repository name\",这个名称比较关键，必须为\"你的用户名.github.io\",例如我的用户名为\"JereryL\",所以我就设置为\"JereryL.github.io\"。修改完毕后，其他设置默认就可以了，然后点击\"Creat repository\"，创建完毕。\n\n在github添加SSH key\n====================\n在github页面的右上角有两个下拉菜单，点击右边的那个下拉菜单，选择\"Settings\"。在“Personal Settings”这一栏中选择“SSH and GPG keys”。在\"SSH keys\"一栏中点击\"New SSH key\"，\"title\"可以随便填。然后将id_rsa.pub里面的内容复制到\"Key\"里（id_rsa.pub在id_rsa同一个目录里）。最后，点击\"Add SSH key\"，完成添加。\n\n将hexo部署上github\n====================\n进入hexo博客所在文件夹，打开_config.yml文件，修改deploy字段如下\n\n    deploy:\n    type: git\n    repository: https://github.com/JereryL/JereryL.github.io.git\n    branch: master\n\nrepository要填写你的仓库地址。修改完后，保存退出，回到终端。输入命令如下\n\n    $ hexo g\n    $ hexo d\n\n如果是第一次使用，将要求设置用户名和密码，根据提示设置便可以了。至此，hexo博客已经部署到github上了，可以在浏览器输入你的博客地址便可浏览。博客的地址为一开始设置的仓库名字，例如我的是  \nJereryL.github.io\n\n更换hexo主题\n========================\n因为我正在使用的是next主题，所以这里以next主题为例。首先找到next主题的仓库，然后克隆到本机hexo目录下的themes目录，代码如下\n\n    $ cd your-hexo-site\n    $ git clone https://github.com/iissnan/hexo-theme-next themes/next\n\n下载完成后，在themes/next下会生成一个_config.yml配置文件，这里称其为主题配置文件，而在hexo目录下的那个_config.yml文件则称为站点配置文件。\n\n启用主题\n-------------------\n修改站点配置文件：\n\n    theme: next\n\n验证主题，可以在终端输入:\n\n    $ hexo g\n    $ hexo s\n\n然后在localhost:4000上查看是否成功修改。\n\n选择主题风格\n------------------\n主题配置文件里面的Scheme字段提供了选择next主题下的3种风格，要切换的话将前面的#号去掉即可\n     \n    #scheme: Muse\n    scheme: Mist\n    #scheme: Pisces\n\n设置语言\n----------------\n修改站点配置语言，将language设置成zh-Hans即可切换为简体中文\n\n    language: zh-Hans\n\n设置菜单\n-----------------------\n    修改主题配置文件，修改如下内容，在启用的菜单项去掉#号，在删除的菜单项加上#号即可\n\n    menu:\n      home: /\n      archives: /archives\n      #about: /about\n      #categories: /categories\n      tags: /tags\n      #commonweal: /404.html\n\n设置头像\n------------------------------\n修改站点配置文件，新增字段 avatar，设置头像的链接地址。例如我的头像放在source/images目录下，则我修改为\n\n    avatar: source/images/avatar.jpg\n\n设置作者昵称\n------------------------------\n修改站点配置未见的author。\n\n设置站点描述\n------------------------\n修改站点配置文件，设置description字段即可。\n\n至此，整个站点基本搭建完毕，除此之外，还能加入多说评论系统，但我还没有进行尝试，所以先不做此修改了。最后一点值得注意的是，很多人为了美观，布局，都会删除hello world这篇文章。但不要急着删除，因为在没有其他文章的情况下删除这篇文章，在进行hexo clean后会报错。所以在你写好自己的第一篇文章后才删除这篇文章吧。\n","slug":"基于windows10搭建github-hexo博客","published":1,"updated":"2016-10-23T02:43:18.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhkfsau0006z3jfqyqcnmai","content":"<h1 id=\"材料\"><a href=\"#材料\" class=\"headerlink\" title=\"材料\"></a>材料</h1><ul>\n<li>windows 10</li>\n<li>Git</li>\n<li>node.js</li>\n<li>github 账号</li>\n<li>hexo</li>\n</ul>\n<h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><p>进入Git的官方网站下载，我选择setup版本，因为Portable版本比较大，而且听说setup版本跟Portable版本区别不大。<br><a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"external\">https://git-scm.com/download/win</a><br>安装的时候有很多选项，我们使用默认配置，一直选择下一步就行了。</p>\n<h1 id=\"安装node-js\"><a href=\"#安装node-js\" class=\"headerlink\" title=\"安装node.js\"></a>安装node.js</h1><p>进入nodejs的官网下载，安装的时候一直选择下一步默认安装就可以了。<br><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">https://nodejs.org/en/</a></p>\n<h1 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h1><p>打开Git Bash，输入如下命令安装hexo</p>\n<pre><code>$ npm install -g hexo-cli\n</code></pre><p>进入你想保存博客文件的目录，然后输入以下命令初始化你的博客</p>\n<pre><code>$ hexo init hexo\n</code></pre><p>进入到hexo文件夹，安装一个依赖(例如我的hexo安装在d盘下)</p>\n<pre><code>$ cd d:/hexo\n$ npm install hexo-deployer-git --save\n</code></pre><p>至此，hexo博客已经生成完毕，接下来就要测试一下，在Git Bash进入hexo目录，然后输入</p>\n<pre><code>$ hexo g\n$ hexo s\n</code></pre><p>在浏览器输入localhost:4000，可以看见搭建的hexo博客了。</p>\n<h1 id=\"生成SSH-key\"><a href=\"#生成SSH-key\" class=\"headerlink\" title=\"生成SSH key\"></a>生成SSH key</h1><p>在Git Bash中输入</p>\n<pre><code>$ ssh-keygen -t rsa -C &quot;你在github上注册的邮箱&quot;\n</code></pre><p>例如，我的账号为”ljhjerery@sina.com”,所以我就输入</p>\n<pre><code>$ ssh-keygen -t rsa -C &quot;ljhjerery@sina.com&quot;\n</code></pre><p>按回车后，它会显示如下提示</p>\n<pre><code>Generating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/Vincent/.ssh/id_rsa):\n</code></pre><p>按回车就行了，生成的SSH key会保存到括号里面的文件中，例如我的SSH key会生成在/c/Users/Vincent/.ssh/id_rsa文件中。然后它会提示你设置密码，如果不设置就空着。</p>\n<pre><code>Enter passphrase (empty for no passphrase):\nEnter same passphrase again:\n</code></pre><p>到此它会显示提示</p>\n<pre><code>Your identification has been saved in /c/Users/Vincent/.ssh/id_rsa.\nYour public key has been saved in /c/Users/Vincent/.ssh/id_rsa.pub.\nThe key fingerprint is:\n</code></pre><p>至此，SSH key已经生成成功。</p>\n<h1 id=\"建立github仓库\"><a href=\"#建立github仓库\" class=\"headerlink\" title=\"建立github仓库\"></a>建立github仓库</h1><p>进入到注册好的github账号，点击”new repository”。在 “Creat a new repository”页面，设置”Repository name”,这个名称比较关键，必须为”你的用户名.github.io”,例如我的用户名为”JereryL”,所以我就设置为”JereryL.github.io”。修改完毕后，其他设置默认就可以了，然后点击”Creat repository”，创建完毕。</p>\n<h1 id=\"在github添加SSH-key\"><a href=\"#在github添加SSH-key\" class=\"headerlink\" title=\"在github添加SSH key\"></a>在github添加SSH key</h1><p>在github页面的右上角有两个下拉菜单，点击右边的那个下拉菜单，选择”Settings”。在“Personal Settings”这一栏中选择“SSH and GPG keys”。在”SSH keys”一栏中点击”New SSH key”，”title”可以随便填。然后将id_rsa.pub里面的内容复制到”Key”里（id_rsa.pub在id_rsa同一个目录里）。最后，点击”Add SSH key”，完成添加。</p>\n<h1 id=\"将hexo部署上github\"><a href=\"#将hexo部署上github\" class=\"headerlink\" title=\"将hexo部署上github\"></a>将hexo部署上github</h1><p>进入hexo博客所在文件夹，打开_config.yml文件，修改deploy字段如下</p>\n<pre><code>deploy:\ntype: git\nrepository: https://github.com/JereryL/JereryL.github.io.git\nbranch: master\n</code></pre><p>repository要填写你的仓库地址。修改完后，保存退出，回到终端。输入命令如下</p>\n<pre><code>$ hexo g\n$ hexo d\n</code></pre><p>如果是第一次使用，将要求设置用户名和密码，根据提示设置便可以了。至此，hexo博客已经部署到github上了，可以在浏览器输入你的博客地址便可浏览。博客的地址为一开始设置的仓库名字，例如我的是<br>JereryL.github.io</p>\n<h1 id=\"更换hexo主题\"><a href=\"#更换hexo主题\" class=\"headerlink\" title=\"更换hexo主题\"></a>更换hexo主题</h1><p>因为我正在使用的是next主题，所以这里以next主题为例。首先找到next主题的仓库，然后克隆到本机hexo目录下的themes目录，代码如下</p>\n<pre><code>$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>下载完成后，在themes/next下会生成一个_config.yml配置文件，这里称其为主题配置文件，而在hexo目录下的那个_config.yml文件则称为站点配置文件。</p>\n<h2 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h2><p>修改站点配置文件：</p>\n<pre><code>theme: next\n</code></pre><p>验证主题，可以在终端输入:</p>\n<pre><code>$ hexo g\n$ hexo s\n</code></pre><p>然后在localhost:4000上查看是否成功修改。</p>\n<h2 id=\"选择主题风格\"><a href=\"#选择主题风格\" class=\"headerlink\" title=\"选择主题风格\"></a>选择主题风格</h2><p>主题配置文件里面的Scheme字段提供了选择next主题下的3种风格，要切换的话将前面的#号去掉即可</p>\n<pre><code>#scheme: Muse\nscheme: Mist\n#scheme: Pisces\n</code></pre><h2 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h2><p>修改站点配置语言，将language设置成zh-Hans即可切换为简体中文</p>\n<pre><code>language: zh-Hans\n</code></pre><h2 id=\"设置菜单\"><a href=\"#设置菜单\" class=\"headerlink\" title=\"设置菜单\"></a>设置菜单</h2><pre><code>修改主题配置文件，修改如下内容，在启用的菜单项去掉#号，在删除的菜单项加上#号即可\n\nmenu:\n  home: /\n  archives: /archives\n  #about: /about\n  #categories: /categories\n  tags: /tags\n  #commonweal: /404.html\n</code></pre><h2 id=\"设置头像\"><a href=\"#设置头像\" class=\"headerlink\" title=\"设置头像\"></a>设置头像</h2><p>修改站点配置文件，新增字段 avatar，设置头像的链接地址。例如我的头像放在source/images目录下，则我修改为</p>\n<pre><code>avatar: source/images/avatar.jpg\n</code></pre><h2 id=\"设置作者昵称\"><a href=\"#设置作者昵称\" class=\"headerlink\" title=\"设置作者昵称\"></a>设置作者昵称</h2><p>修改站点配置未见的author。</p>\n<h2 id=\"设置站点描述\"><a href=\"#设置站点描述\" class=\"headerlink\" title=\"设置站点描述\"></a>设置站点描述</h2><p>修改站点配置文件，设置description字段即可。</p>\n<p>至此，整个站点基本搭建完毕，除此之外，还能加入多说评论系统，但我还没有进行尝试，所以先不做此修改了。最后一点值得注意的是，很多人为了美观，布局，都会删除hello world这篇文章。但不要急着删除，因为在没有其他文章的情况下删除这篇文章，在进行hexo clean后会报错。所以在你写好自己的第一篇文章后才删除这篇文章吧。</p>\n","excerpt":"","more":"<h1 id=\"材料\"><a href=\"#材料\" class=\"headerlink\" title=\"材料\"></a>材料</h1><ul>\n<li>windows 10</li>\n<li>Git</li>\n<li>node.js</li>\n<li>github 账号</li>\n<li>hexo</li>\n</ul>\n<h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><p>进入Git的官方网站下载，我选择setup版本，因为Portable版本比较大，而且听说setup版本跟Portable版本区别不大。<br><a href=\"https://git-scm.com/download/win\">https://git-scm.com/download/win</a><br>安装的时候有很多选项，我们使用默认配置，一直选择下一步就行了。</p>\n<h1 id=\"安装node-js\"><a href=\"#安装node-js\" class=\"headerlink\" title=\"安装node.js\"></a>安装node.js</h1><p>进入nodejs的官网下载，安装的时候一直选择下一步默认安装就可以了。<br><a href=\"https://nodejs.org/en/\">https://nodejs.org/en/</a></p>\n<h1 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h1><p>打开Git Bash，输入如下命令安装hexo</p>\n<pre><code>$ npm install -g hexo-cli\n</code></pre><p>进入你想保存博客文件的目录，然后输入以下命令初始化你的博客</p>\n<pre><code>$ hexo init hexo\n</code></pre><p>进入到hexo文件夹，安装一个依赖(例如我的hexo安装在d盘下)</p>\n<pre><code>$ cd d:/hexo\n$ npm install hexo-deployer-git --save\n</code></pre><p>至此，hexo博客已经生成完毕，接下来就要测试一下，在Git Bash进入hexo目录，然后输入</p>\n<pre><code>$ hexo g\n$ hexo s\n</code></pre><p>在浏览器输入localhost:4000，可以看见搭建的hexo博客了。</p>\n<h1 id=\"生成SSH-key\"><a href=\"#生成SSH-key\" class=\"headerlink\" title=\"生成SSH key\"></a>生成SSH key</h1><p>在Git Bash中输入</p>\n<pre><code>$ ssh-keygen -t rsa -C &quot;你在github上注册的邮箱&quot;\n</code></pre><p>例如，我的账号为”ljhjerery@sina.com”,所以我就输入</p>\n<pre><code>$ ssh-keygen -t rsa -C &quot;ljhjerery@sina.com&quot;\n</code></pre><p>按回车后，它会显示如下提示</p>\n<pre><code>Generating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/Vincent/.ssh/id_rsa):\n</code></pre><p>按回车就行了，生成的SSH key会保存到括号里面的文件中，例如我的SSH key会生成在/c/Users/Vincent/.ssh/id_rsa文件中。然后它会提示你设置密码，如果不设置就空着。</p>\n<pre><code>Enter passphrase (empty for no passphrase):\nEnter same passphrase again:\n</code></pre><p>到此它会显示提示</p>\n<pre><code>Your identification has been saved in /c/Users/Vincent/.ssh/id_rsa.\nYour public key has been saved in /c/Users/Vincent/.ssh/id_rsa.pub.\nThe key fingerprint is:\n</code></pre><p>至此，SSH key已经生成成功。</p>\n<h1 id=\"建立github仓库\"><a href=\"#建立github仓库\" class=\"headerlink\" title=\"建立github仓库\"></a>建立github仓库</h1><p>进入到注册好的github账号，点击”new repository”。在 “Creat a new repository”页面，设置”Repository name”,这个名称比较关键，必须为”你的用户名.github.io”,例如我的用户名为”JereryL”,所以我就设置为”JereryL.github.io”。修改完毕后，其他设置默认就可以了，然后点击”Creat repository”，创建完毕。</p>\n<h1 id=\"在github添加SSH-key\"><a href=\"#在github添加SSH-key\" class=\"headerlink\" title=\"在github添加SSH key\"></a>在github添加SSH key</h1><p>在github页面的右上角有两个下拉菜单，点击右边的那个下拉菜单，选择”Settings”。在“Personal Settings”这一栏中选择“SSH and GPG keys”。在”SSH keys”一栏中点击”New SSH key”，”title”可以随便填。然后将id_rsa.pub里面的内容复制到”Key”里（id_rsa.pub在id_rsa同一个目录里）。最后，点击”Add SSH key”，完成添加。</p>\n<h1 id=\"将hexo部署上github\"><a href=\"#将hexo部署上github\" class=\"headerlink\" title=\"将hexo部署上github\"></a>将hexo部署上github</h1><p>进入hexo博客所在文件夹，打开_config.yml文件，修改deploy字段如下</p>\n<pre><code>deploy:\ntype: git\nrepository: https://github.com/JereryL/JereryL.github.io.git\nbranch: master\n</code></pre><p>repository要填写你的仓库地址。修改完后，保存退出，回到终端。输入命令如下</p>\n<pre><code>$ hexo g\n$ hexo d\n</code></pre><p>如果是第一次使用，将要求设置用户名和密码，根据提示设置便可以了。至此，hexo博客已经部署到github上了，可以在浏览器输入你的博客地址便可浏览。博客的地址为一开始设置的仓库名字，例如我的是<br>JereryL.github.io</p>\n<h1 id=\"更换hexo主题\"><a href=\"#更换hexo主题\" class=\"headerlink\" title=\"更换hexo主题\"></a>更换hexo主题</h1><p>因为我正在使用的是next主题，所以这里以next主题为例。首先找到next主题的仓库，然后克隆到本机hexo目录下的themes目录，代码如下</p>\n<pre><code>$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n</code></pre><p>下载完成后，在themes/next下会生成一个_config.yml配置文件，这里称其为主题配置文件，而在hexo目录下的那个_config.yml文件则称为站点配置文件。</p>\n<h2 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h2><p>修改站点配置文件：</p>\n<pre><code>theme: next\n</code></pre><p>验证主题，可以在终端输入:</p>\n<pre><code>$ hexo g\n$ hexo s\n</code></pre><p>然后在localhost:4000上查看是否成功修改。</p>\n<h2 id=\"选择主题风格\"><a href=\"#选择主题风格\" class=\"headerlink\" title=\"选择主题风格\"></a>选择主题风格</h2><p>主题配置文件里面的Scheme字段提供了选择next主题下的3种风格，要切换的话将前面的#号去掉即可</p>\n<pre><code>#scheme: Muse\nscheme: Mist\n#scheme: Pisces\n</code></pre><h2 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h2><p>修改站点配置语言，将language设置成zh-Hans即可切换为简体中文</p>\n<pre><code>language: zh-Hans\n</code></pre><h2 id=\"设置菜单\"><a href=\"#设置菜单\" class=\"headerlink\" title=\"设置菜单\"></a>设置菜单</h2><pre><code>修改主题配置文件，修改如下内容，在启用的菜单项去掉#号，在删除的菜单项加上#号即可\n\nmenu:\n  home: /\n  archives: /archives\n  #about: /about\n  #categories: /categories\n  tags: /tags\n  #commonweal: /404.html\n</code></pre><h2 id=\"设置头像\"><a href=\"#设置头像\" class=\"headerlink\" title=\"设置头像\"></a>设置头像</h2><p>修改站点配置文件，新增字段 avatar，设置头像的链接地址。例如我的头像放在source/images目录下，则我修改为</p>\n<pre><code>avatar: source/images/avatar.jpg\n</code></pre><h2 id=\"设置作者昵称\"><a href=\"#设置作者昵称\" class=\"headerlink\" title=\"设置作者昵称\"></a>设置作者昵称</h2><p>修改站点配置未见的author。</p>\n<h2 id=\"设置站点描述\"><a href=\"#设置站点描述\" class=\"headerlink\" title=\"设置站点描述\"></a>设置站点描述</h2><p>修改站点配置文件，设置description字段即可。</p>\n<p>至此，整个站点基本搭建完毕，除此之外，还能加入多说评论系统，但我还没有进行尝试，所以先不做此修改了。最后一点值得注意的是，很多人为了美观，布局，都会删除hello world这篇文章。但不要急着删除，因为在没有其他文章的情况下删除这篇文章，在进行hexo clean后会报错。所以在你写好自己的第一篇文章后才删除这篇文章吧。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"civhkfsaq0005z3jfh9a251z3","tag_id":"civhkfsai0003z3jfpn5q0ojr","_id":"civhkfsaz0008z3jfgmks9rcn"},{"post_id":"civhkfs9z0001z3jfyirpegct","tag_id":"civhkfsai0003z3jfpn5q0ojr","_id":"civhkfsb20009z3jf41q6ejs9"},{"post_id":"civhkfsau0006z3jfqyqcnmai","tag_id":"civhkfsai0003z3jfpn5q0ojr","_id":"civhkfsba000bz3jfwh3ieinr"},{"post_id":"civhkfsa80002z3jfe1rs78wn","tag_id":"civhkfsai0003z3jfpn5q0ojr","_id":"civhkfsbb000cz3jfadc4r08c"},{"post_id":"civhkfsam0004z3jfm4wpcpwz","tag_id":"civhkfsai0003z3jfpn5q0ojr","_id":"civhkfsbb000dz3jflsramsqn"}],"Tag":[{"name":"学习笔记","_id":"civhkfsai0003z3jfpn5q0ojr"}]}}